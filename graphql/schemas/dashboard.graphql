type SalesAmountDates {
  day: Float
  week: Float
  month: Float
}

type SalesAmount {
  current: SalesAmountDates
  previous: SalesAmountDates
}

type SalesAmountCity {
  city: City
  amount: Float
  shirts_count: Int
  orders_count: Int
}

type SalesAmountModel {
  model: Model
  amount: Float
  shirts_count: Int
  sales_percentage: Float
}

type ClientsSegmentationData {
  amount: Float
  amount_pre_registered: Float
  shirts_count: Int
  orders_count: Int
  orders_count_pre_registered: Int
}

type ClientsSegmentation {
  new_clients: ClientsSegmentationData!
  recurrent_clients: ClientsSegmentationData!
}

type DashboardProductionOfDay {
  day: DashboardProductionData
  week: DashboardProductionData
  last_week: DashboardProductionData
}

type DashboardProductionData {
  orders_count: Int
  shirts_count: Int
  receipt: Float
}

type DashboardProduction {
  estampados: DashboardProductionOfDay
  costurados: DashboardProductionOfDay
  month_production: DashboardProductionData
  late_orders: DashboardProductionData
  waiting_for_withdrawal_orders: DashboardProductionData
}

input DashboardProductionSettings {
  estampados_no_dia_id: ID
  costurados_no_dia_id: ID
  month_production_id: ID
  late_orders_id: ID
  waiting_for_withdrawal_id: ID
  delivered_id: ID
}

enum SalesAmountModelDates {
  MONTH @enum(value: "month")
  YEAR @enum(value: "year")
  ALL_TIME @enum(value: "all_time")
}

enum ClientSegmentationDates {
  MONTH @enum(value: "month")
  YEAR @enum(value: "year")
  ALL_TIME @enum(value: "all_time")
}

type SalesAmountChartDate {
  day: Date
  amount: Float
}

type SalesAmountChart {
  current: [SalesAmountChartDate]
  previous: [SalesAmountChartDate]
}

type DashboardMonthSales {
  percentage: Float
  total: Float
}

type DashboardMonthSalesUsers {
  user: User
  direct_cost_items: DashboardMonthSales
  products: DashboardMonthSales
}

enum DashboardProductionOrdersTypes {
  ESTAMPADOS @enum(value: "estampados")
  COSTURADOS @enum(value: "costurados")
  MONTH_PRODUCTION @enum(value: "month_production")
  LATE_ORDERS @enum(value: "late_orders")
  WAITING_FOR_WITHDRAWAL_ORDERS @Enum(value: "waiting_for_withdrawal_orders")
}

extend type Query {
  dashboardSalesAmount: SalesAmount
  dashboardSalesAmountChart: SalesAmountChart!

  dashboardSalesAmountCities(date: String): [SalesAmountCity]
    @canAccess(roles: ["GERENCIA"])

  dashboardSalesAmountModels(date: SalesAmountModelDates!): [SalesAmountModel]
    @canAccess(roles: ["GERENCIA"])

  dashboardClientsSegmentation(
    date: ClientSegmentationDates!
  ): ClientsSegmentation! @canAccess(roles: ["GERENCIA"])

  dashboardProduction(production_date: String): DashboardProduction
    @canAccess(roles: ["GERENCIA"])

  dashboardProductionOrders(
    type: DashboardProductionOrdersTypes!
    production_date: String
  ): [Order]
    @paginate(
      builder: "App\\GraphQL\\Builders\\DashboardProductionOrdersBuilder"
    )
    @canAccess(roles: ["GERENCIA"])

  dashboardMonthSalesUsers: [DashboardMonthSalesUsers!]!
}

extend type Mutation {
  dashboardProductionSettings(
    settings: DashboardProductionSettings! @spread
  ): Boolean
}
