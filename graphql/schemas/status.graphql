type Status @guard {
  id: ID!
  text: String!
  is_available: Boolean!
  sector: Sector
  pivot: OrderStatusPivot
  order: Int!
}

type OrderStatusPivot {
  status: Status
  user: User
  confirmed_at: DateTime
  is_confirmed: Boolean
}

input StatusInput {
  text: String!
}

input StatusDeleteInput {
  replace_status_id: ID!
  password: String!
}

input StatusReorderInput {
  id: ID!
  order: Int!
}

extend type Query {
  status: [Status!]! @all @orderBy(column: "order")
}

extend type Mutation {
  statusCreate(input: StatusInput! @spread): Status!
    @canAccess(roles: ["gerencia"])

  statusUpdate(id: ID!, input: StatusInput! @spread): Status!
    @canAccess(roles: ["gerencia"])

  statusDelete(id: ID!, input: StatusDeleteInput! @spread): Status!
    @canAccess(roles: ["gerencia"])

  statusSetAvailable(ids: [ID]): [Status] @canAccess(roles: ["gerencia"])

  statusReorder(input: [StatusReorderInput] @spread): [Status]
    @canAccess(roles: ["gerencia"])
}
