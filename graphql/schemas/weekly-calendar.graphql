type WeeklyCalendar @guard {
  date: Date
  orders: [Order]
  total_quantity: Int
}

input OrderPreRegisteredInput {
  reminder: String
  status_id: ID
  art_paths: [String]
  print_date: String
  seam_date: String
  delivery_date: String
}

input OrderDatesFieldsConcludeStatus {
  print_date: [ID]
  seam_date: [ID]
  delivery_date: [ID]
}

input OrderDatesFieldsUpdatableField {
  status: [ID]
  update_to: ID
}

input OrderDatesFieldsUpdatableStatus {
  print_date: OrderDatesFieldsUpdatableField!
  seam_date: OrderDatesFieldsUpdatableField!
  delivery_date: OrderDatesFieldsUpdatableField!
}

input ReorderWeeklyCalendarOrdersInput {
  id: ID
  order: Int
}

enum QueryFromDateColumns {
  PRINT_DATE @enum(value: "print_date")
  SEAM_DATE @enum(value: "seam_date")
  DELIVERY_DATE @enum(value: "delivery_date")
}

extend type Query {
  weeklyCalendar (date: String! field: QueryFromDateColumns!): [WeeklyCalendar]
    @canAccess(roles: ["gerencia", "atendimento", "design", "costura", "estampa"])
}

extend type Mutation {
  orderCreatePreRegistered (input: OrderPreRegisteredInput! @spread): Order
    @canAccess(roles: ["gerencia", "atendimento", "design"])

  orderConcludeStatus (id: ID! field: QueryFromDateColumns!): Order
    @canAccess(roles: ["gerencia", "atendimento", "costura", "estampa", "design"])

  statusUpdateConcludeWeeklyCalendar (input: OrderDatesFieldsConcludeStatus! @spread): String
    @canAccess(roles: ["gerencia"])

  statusUpdateUpdatableWeeklyCalendar (input: OrderDatesFieldsUpdatableStatus! @spread): String
    @canAccess(roles: ["gerencia"])

  weeklyCalendarReorder (input: [ReorderWeeklyCalendarOrdersInput]): [Order]
    @canAccess(roles: ["gerencia", "atendimento", "estampa"])
}
