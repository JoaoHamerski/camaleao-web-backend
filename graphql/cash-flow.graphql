input CashFlowFilterDatesInput {
  start_date: String!
  final_date: String
}

enum QueryCashFlowEntriesWhereConditionsColumn {
  DATE @enum(value: "date")
  DESCRIPTION @enum(value: "description")
  VALUE @enum(value: "value")
}

enum QueryCashFlowEntriesOrderByColumn {
  DATE @enum(value: "date")
  CREATED_AT @enum(value: "created_at")
}

extend type Query {
  cashFlowBalance (
    input: CashFlowFilterDatesInput! @spread
  ): Float
    @canAccess(roles: ["gerencia"])

  cashFlowEntries (
    where: _ @whereConditions(
      columnsEnum: "QueryCashFlowEntriesWhereConditionsColumn"
      handler: "App\\GraphQL\\Handlers\\WhereCashFlowHandler"
    )
    orderBy: _ @orderBy(columnsEnum: "QueryCashFlowEntriesOrderByColumn")
  ): [PaymentExpense]
    @paginate(builder: "App\\GraphQL\\Builders\\CashFlowEntriesBuilder")
    @canAccess(roles: ["gerencia"])
}
